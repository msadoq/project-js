// Produced by Acceleo JavaScript Generator 1.1.2
/* eslint-disable max-len, "DV6 TBC_CNES generated code can't avoid too long lines" */
/* eslint-disable complexity, "DV6 TBC_CNES generated code can't avoid complexity" */
const ByteBuffer = require('bytebuffer');
const fINETIME = require('../ccsds_mal/fINETIME');
const lONG = require('../ccsds_mal/lONG');
const objectDetails = require('./objectDetails');
const uSHORT = require('../ccsds_mal/uSHORT');

const _MILLISEC_SIZE = 8;
const _PICOSEC_SIZE = 4;
const INSTID_SIZE = 8;
const INSTID_OFFSET = 0;
const OBJECTDETAILS_RELATED_SIZE = 8;
const OBJECTDETAILS_RELATED_OFFSET = INSTID_OFFSET + INSTID_SIZE;
const OBJECTDETAILS_SOURCE_OBJECTTYPE_AREA_SIZE = 2;
const OBJECTDETAILS_SOURCE_OBJECTTYPE_AREA_OFFSET = 0;
const OBJECTDETAILS_SOURCE_OBJECTTYPE_SERVICE_SIZE = 2;
const OBJECTDETAILS_SOURCE_OBJECTTYPE_SERVICE_OFFSET = OBJECTDETAILS_SOURCE_OBJECTTYPE_AREA_OFFSET + OBJECTDETAILS_SOURCE_OBJECTTYPE_AREA_SIZE;
const OBJECTDETAILS_SOURCE_OBJECTTYPE_VERSION_SIZE = 1;
const OBJECTDETAILS_SOURCE_OBJECTTYPE_VERSION_OFFSET = OBJECTDETAILS_SOURCE_OBJECTTYPE_SERVICE_OFFSET + OBJECTDETAILS_SOURCE_OBJECTTYPE_SERVICE_SIZE;
const OBJECTDETAILS_SOURCE_OBJECTTYPE_NUMBER_SIZE = 2;
const OBJECTDETAILS_SOURCE_OBJECTTYPE_NUMBER_OFFSET = OBJECTDETAILS_SOURCE_OBJECTTYPE_VERSION_OFFSET + OBJECTDETAILS_SOURCE_OBJECTTYPE_VERSION_SIZE;
const OBJECTDETAILS_SOURCE_OBJECTTYPE_SIZE = (OBJECTDETAILS_SOURCE_OBJECTTYPE_NUMBER_OFFSET + OBJECTDETAILS_SOURCE_OBJECTTYPE_NUMBER_SIZE) - OBJECTDETAILS_SOURCE_OBJECTTYPE_AREA_OFFSET;
const OBJECTDETAILS_SOURCE_OBJECTTYPE_OFFSET = 0;
const OBJECTDETAILS_SOURCE_OBJECTKEY_DOMAINEID_SIZE = 2;
const OBJECTDETAILS_SOURCE_OBJECTKEY_DOMAINEID_OFFSET = OBJECTDETAILS_SOURCE_OBJECTTYPE_OFFSET + OBJECTDETAILS_SOURCE_OBJECTTYPE_SIZE;
const OBJECTDETAILS_SOURCE_OBJECTKEY_UID_SIZE = 8;
const OBJECTDETAILS_SOURCE_OBJECTKEY_UID_OFFSET = OBJECTDETAILS_SOURCE_OBJECTKEY_DOMAINEID_OFFSET + OBJECTDETAILS_SOURCE_OBJECTKEY_DOMAINEID_SIZE;
const OBJECTDETAILS_SOURCE_OBJECTKEY_SIZE = (OBJECTDETAILS_SOURCE_OBJECTKEY_UID_OFFSET + OBJECTDETAILS_SOURCE_OBJECTKEY_UID_SIZE) - OBJECTDETAILS_SOURCE_OBJECTKEY_DOMAINEID_OFFSET;
const OBJECTDETAILS_SOURCE_OBJECTKEY_OFFSET = OBJECTDETAILS_SOURCE_OBJECTTYPE_OFFSET + OBJECTDETAILS_SOURCE_OBJECTTYPE_SIZE;
const OBJECTDETAILS_SOURCE_SIZE = (OBJECTDETAILS_SOURCE_OBJECTKEY_OFFSET + OBJECTDETAILS_SOURCE_OBJECTKEY_SIZE) - OBJECTDETAILS_SOURCE_OBJECTTYPE_OFFSET;
const OBJECTDETAILS_SOURCE_OFFSET = OBJECTDETAILS_RELATED_OFFSET + OBJECTDETAILS_RELATED_SIZE;
const OBJECTDETAILS_SIZE = (OBJECTDETAILS_SOURCE_OFFSET + OBJECTDETAILS_SOURCE_SIZE) - OBJECTDETAILS_RELATED_OFFSET;
const OBJECTDETAILS_OFFSET = INSTID_OFFSET + INSTID_SIZE;
const SLOTID_SIZE = 2;
const SLOTID_OFFSET = OBJECTDETAILS_OFFSET + OBJECTDETAILS_SIZE;
const TIMESTAMP_SIZE = _MILLISEC_SIZE + _PICOSEC_SIZE;
const TIMESTAMP_OFFSET = SLOTID_OFFSET + SLOTID_SIZE;
const PROVIDERID_SIZE = 2;
const PROVIDERID_OFFSET = TIMESTAMP_OFFSET + TIMESTAMP_SIZE;

module.exports = {
  encodeRaw: (data, buffer, offset = 0) => {
    const archiveDetails = buffer || new ByteBuffer(null, ByteBuffer.LITTLE_ENDIAN);
    lONG.encodeRaw(data.instId, archiveDetails, INSTID_OFFSET + offset, INSTID_SIZE);
    objectDetails.encodeRaw(data.objectDetails, archiveDetails, OBJECTDETAILS_OFFSET + offset, OBJECTDETAILS_SIZE);
    uSHORT.encodeRaw(data.slotId, archiveDetails, SLOTID_OFFSET + offset, SLOTID_SIZE);
    fINETIME.encodeRaw(data.timestamp, archiveDetails, TIMESTAMP_OFFSET + offset, TIMESTAMP_SIZE);
    uSHORT.encodeRaw(data.providerId, archiveDetails, PROVIDERID_OFFSET + offset, PROVIDERID_SIZE);
    return archiveDetails.buffer;
  },
  decodeRaw: (data, buffer, offset = 0) => {
    const archiveDetails = {};
    const bufferedData = buffer || ByteBuffer.wrap(data, ByteBuffer.LITTLE_ENDIAN);
    archiveDetails.instId = lONG.decodeRaw(null, bufferedData, INSTID_OFFSET + offset, INSTID_SIZE);
    archiveDetails.objectDetails = objectDetails.decodeRaw(null, bufferedData, OBJECTDETAILS_OFFSET + offset, OBJECTDETAILS_SIZE);
    archiveDetails.slotId = uSHORT.decodeRaw(null, bufferedData, SLOTID_OFFSET + offset, SLOTID_SIZE);
    archiveDetails.timestamp = fINETIME.decodeRaw(null, bufferedData, TIMESTAMP_OFFSET + offset, TIMESTAMP_SIZE);
    archiveDetails.providerId = uSHORT.decodeRaw(null, bufferedData, PROVIDERID_OFFSET + offset, PROVIDERID_SIZE);
    return archiveDetails;
  },
};
