#GPCCHS 2.0.0.3 06/07/2018 release-notes.txt


1 - Introduction
Cette version 2.0 apporte les fonctionnalitees listees ci-dessous.

2 - Nouvelles fonctions
2.1 - Vues
2.1.1 - Alarme
L'operateur peut visualiser et acquitter des alarmes bord et sol dans des vues dediees.

2.1.2 - Plot
Des fonctions de zoom ont ete ajoutees a la vue Plot :
 * Zoom lineaire : action molette sur un axe
 * Zoom fenetre : SHIFT + action click gauche en glissant sur la courbe

2.1.3 - Parametrique
Pour tracer une courbe parametrique, l'operateur doit definir 2 entryPoints sur sa courbe.

2.2 - HKTMR/P
Dans l'editeur des vues, il est possible de faire un filtre sur les parametres HKTMR/P.

2.3 - Sauvegarde de la timebar
L'operateur peut sauvegarder les informations de la largeur de la fenetre de visualisation et de la valeur du temps courant dans le document workspace lorsqu'il coche la checkbox se trouvant au niveau de la timebar.

2.4 - Conversion d'unites
La conversion d'unites est realisee au niveau des entryPoints en definissant les champs source et cible.

2.5 - Configuration
2.5.1 - Gestion des couleurs Multi-Sat
Tous les domaines doivent absolument avoir une couleur associ??e pour que l'affichage fonctionne. Cette couleur doit ??tre d??finie dans le fichier de configuration "config.colors.json" dans un environnement de d??veloppement ou dans le TBD dans un environnement de production.

Le fichier doit avoir le format suivant :
{
  "DOMAINS_COLORS" : [
    { "fr.cnes.isis.simupus": "#339933" },
    {"fr.cnes.isis": "#0066ff" },
    {"multi": "#ff3300" }
  ]
}

2.5.2 - Gestion de la version de protocol
La version de protocol entre GPCCDC et la VIMA-JS doit ??tre en version 2.
La ligne ci-dessous doit ??tre ajout??e dasn le fichier de configuration de la VIMA-JS :
"VERSION_DC_COM_PROTOCOL": "DC_COM_V2",

2.5.3 - Migrating VIMA view configuration files

A migration script `viewConfig.js` can be found in `LPISIS/GPCCHS/GPCCHS_E_VIS/src/client/src/main/js/client/scripts/viewConfigurationFiles/viewConfig.js`. It is used to migrate
VIMA configuration files to a newer version by applying to them a set of migration files.

A migration file contains the pure functions that create the migrated view configuration (updates) and the functions that are called after these updates (hooks). 

  Usage: viewConfig [options]

  Options:

    -V, --version                 output the version number
    -i, --info <inputFile>        Get information about <inputFile>
    -c, --check <inputFile>       Check if <inputFile> is a valid VIMA view configuration
    -m, --migrate <inputFile>     Migrate <inputFile> to the specified version
    -t, --target <targetVersion>  Sets target version for migration, default 2.0
    -l, --lock <lockFile>         Sets or use existing lock file to remember migrations that have already been applied
    -o, --output <outputFile>     Sets output file to save migrated view configuration
    -h, --help                    output usage information

For example, to apply the migrations for version 2.2.1 to a file `sample.vipv`, use the following command :

    viewConfig -m sample.vipv -t 2.2.1 --o sample.vipv

where viewConfig is an alias to the specified script path.

You can also migrate a set of view configuration files, for example :

    for f in `find . -name *.vi*`; do viewConfig -m $f -t 2.2.1 -o $f; done

Warning:

- You should create a backup of the migrated view configuration files before applying any migration, or specify an output path different of the input path.
- The migration script only applies version-specific migrations once at a time. For example, to migrate a 2.0.0 view configuration file.
to a 3.0.0 view configuration file, you should apply all migrations in between (2.2.1, ..., 3.0.0).
- If any error occurs during the migration of a view configuration file, the script will fail silently
and returns the input file unchanged.
- If `output` argument is not specified, the migrated file is written to stdout. 

So if a migration is pure (_i.e_ it only updates the migration file without side effects such as writing other files), the following command:

     viewConfig -m sample.vipv -t 2.2.1 --output sample.vipv
 
is equivalent to:

     viewConfig -m sample.vipv -t 2.2.1 > sample.vipv

However, it is recommended to use the `output` argument as the scripts knows the new file path and can use it in the migration specified hooks.

See `LPISIS/GPCCHS/GPCCHS_E_VIS/src/client/src/main/js/client/scripts/viewConfigurationFiles/README.md` for more details.

#Generated by Framework DDC-ng (version 0.8a)
