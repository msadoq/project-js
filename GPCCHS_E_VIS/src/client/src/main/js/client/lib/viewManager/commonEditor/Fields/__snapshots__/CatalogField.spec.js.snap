// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CatalogField :: render CatalogField :: render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(Symbol.observable): [Function],
          }
    }
>
    <ReduxForm
        askCatalogs={[Function]}
        catalogs={
            Array [
                Object {
                  "items": Array [],
                  "name": "catalogName",
                },
              ]
        }
        domainId={1}
        sessionId={1}
        timelineId="timelineId"
    />
</Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "askCatalogs": [Function],
      "catalogs": Array [
        Object {
          "items": Array [],
          "name": "catalogName",
        },
      ],
      "domainId": 1,
      "sessionId": 1,
      "timelineId": "timelineId",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "askCatalogs": [Function],
        "catalogs": Array [
          Object {
            "items": Array [],
            "name": "catalogName",
          },
        ],
        "domainId": 1,
        "sessionId": 1,
        "timelineId": "timelineId",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`CatalogField :: render CatalogField :: render requesting 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(Symbol.observable): [Function],
          }
    }
>
    <ReduxForm
        askCatalogs={[Function]}
        catalogs="requesting"
        domainId={1}
        sessionId={1}
        timelineId="timelineId"
    />
</Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "askCatalogs": [Function],
      "catalogs": "requesting",
      "domainId": 1,
      "sessionId": 1,
      "timelineId": "timelineId",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "askCatalogs": [Function],
        "catalogs": "requesting",
        "domainId": 1,
        "sessionId": 1,
        "timelineId": "timelineId",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
