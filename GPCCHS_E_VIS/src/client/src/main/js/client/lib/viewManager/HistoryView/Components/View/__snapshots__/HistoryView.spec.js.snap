// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HistoryView Component rendering should render default view if a timeline is selected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HistoryView
    addEntryPoint={[Function]}
    countBySearching={0}
    currentRowIndexes={Array []}
    entryPoints={Array []}
    entryPointsWithMetadata={Array []}
    inspectorEpId={null}
    isInspectorOpened={false}
    isTimelineSelected={true}
    last={Object {}}
    links={Array []}
    mainMenu={Array []}
    openEditor={[Function]}
    openInspector={[Function]}
    pageId="pageId"
    removeLink={[Function]}
    searchCount={Object {}}
    searchForThisView={false}
    searching=""
    showLinks={false}
    updateSearchCount={[Function]}
    updateShowLinks={[Function]}
    viewId="viewId"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <DroppableContainer
        className="HistoryView"
        onContextMenu={[Function]}
        onDrop={[Function]}
        text="Drop here"
>
        <div
                className="HistoryViewTableContainer"
        >
                <Connect(VirtualizedTableView)
                        contentModifier={[Function]}
                        gridRef={[Function]}
                        overrideStyle={[Function]}
                        searchForThisView={false}
                        searching=""
                        tableId="history"
                        viewId="viewId"
                        withGroups={true}
                />
        </div>
        <div
                className="HistoryViewLinksContainer remove"
        >
                <Connect(Links)
                        links={Array []}
                        pageId="pageId"
                        removeLink={[Function]}
                        show={false}
                        toggleShowLinks={[Function]}
                        viewId="viewId"
                />
        </div>
</DroppableContainer>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            className="HistoryViewTableContainer"
>
            <Connect(VirtualizedTableView)
                        contentModifier={[Function]}
                        gridRef={[Function]}
                        overrideStyle={[Function]}
                        searchForThisView={false}
                        searching=""
                        tableId="history"
                        viewId="viewId"
                        withGroups={true}
            />
</div>,
          <div
            className="HistoryViewLinksContainer remove"
>
            <Connect(Links)
                        links={Array []}
                        pageId="pageId"
                        removeLink={[Function]}
                        show={false}
                        toggleShowLinks={[Function]}
                        viewId="viewId"
            />
</div>,
        ],
        "className": "HistoryView",
        "onContextMenu": [Function],
        "onDrop": [Function],
        "text": "Drop here",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Connect(VirtualizedTableView)
              contentModifier={[Function]}
              gridRef={[Function]}
              overrideStyle={[Function]}
              searchForThisView={false}
              searching=""
              tableId="history"
              viewId="viewId"
              withGroups={true}
/>,
            "className": "HistoryViewTableContainer",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "contentModifier": [Function],
              "gridRef": [Function],
              "overrideStyle": [Function],
              "searchForThisView": false,
              "searching": "",
              "tableId": "history",
              "viewId": "viewId",
              "withGroups": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Connect(Links)
              links={Array []}
              pageId="pageId"
              removeLink={[Function]}
              show={false}
              toggleShowLinks={[Function]}
              viewId="viewId"
/>,
            "className": "HistoryViewLinksContainer remove",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "links": Array [],
              "pageId": "pageId",
              "removeLink": [Function],
              "show": false,
              "toggleShowLinks": [Function],
              "viewId": "viewId",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DroppableContainer
          className="HistoryView"
          onContextMenu={[Function]}
          onDrop={[Function]}
          text="Drop here"
>
          <div
                    className="HistoryViewTableContainer"
          >
                    <Connect(VirtualizedTableView)
                              contentModifier={[Function]}
                              gridRef={[Function]}
                              overrideStyle={[Function]}
                              searchForThisView={false}
                              searching=""
                              tableId="history"
                              viewId="viewId"
                              withGroups={true}
                    />
          </div>
          <div
                    className="HistoryViewLinksContainer remove"
          >
                    <Connect(Links)
                              links={Array []}
                              pageId="pageId"
                              removeLink={[Function]}
                              show={false}
                              toggleShowLinks={[Function]}
                              viewId="viewId"
                    />
          </div>
</DroppableContainer>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div
              className="HistoryViewTableContainer"
>
              <Connect(VirtualizedTableView)
                            contentModifier={[Function]}
                            gridRef={[Function]}
                            overrideStyle={[Function]}
                            searchForThisView={false}
                            searching=""
                            tableId="history"
                            viewId="viewId"
                            withGroups={true}
              />
</div>,
            <div
              className="HistoryViewLinksContainer remove"
>
              <Connect(Links)
                            links={Array []}
                            pageId="pageId"
                            removeLink={[Function]}
                            show={false}
                            toggleShowLinks={[Function]}
                            viewId="viewId"
              />
</div>,
          ],
          "className": "HistoryView",
          "onContextMenu": [Function],
          "onDrop": [Function],
          "text": "Drop here",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(VirtualizedTableView)
                contentModifier={[Function]}
                gridRef={[Function]}
                overrideStyle={[Function]}
                searchForThisView={false}
                searching=""
                tableId="history"
                viewId="viewId"
                withGroups={true}
/>,
              "className": "HistoryViewTableContainer",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "contentModifier": [Function],
                "gridRef": [Function],
                "overrideStyle": [Function],
                "searchForThisView": false,
                "searching": "",
                "tableId": "history",
                "viewId": "viewId",
                "withGroups": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(Links)
                links={Array []}
                pageId="pageId"
                removeLink={[Function]}
                show={false}
                toggleShowLinks={[Function]}
                viewId="viewId"
/>,
              "className": "HistoryViewLinksContainer remove",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "links": Array [],
                "pageId": "pageId",
                "removeLink": [Function],
                "show": false,
                "toggleShowLinks": [Function],
                "viewId": "viewId",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
