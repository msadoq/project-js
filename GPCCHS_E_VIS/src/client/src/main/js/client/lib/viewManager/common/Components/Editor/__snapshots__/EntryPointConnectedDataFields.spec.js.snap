// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`viewManager viewManager :: common viewManager :: common :: Components viewManager :: common :: Components :: Editor viewManager :: common :: Components :: Editor :: EntryPointConnectedDataFields snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EntryPointConnectedDataFields
    domain="domain"
    domains={Array []}
    entryPoint={Object {}}
    form="form"
    handleSubmit={[Function]}
    pageId="page1"
    panels={Array []}
    pristine={true}
    reset={[Function]}
    selectedCatalogName={null}
    selectedComObjectName={null}
    selectedDomainName={null}
    selectedItemName={null}
    selectedTimelineId={null}
    submitting={false}
    timeline="timeline"
    updateEntryPoint={[Function]}
    updateViewSubPanels={[Function]}
    valid={true}
    viewId="view1"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <HorizontalFormGroup
          label="Formula"
>
          <Field
                    className="form-control input-sm"
                    component={[Function]}
                    name="formula"
                    rows="4"
          />
</HorizontalFormGroup>,
        <HorizontalFormGroup
          label="Domain"
>
          <Connect(DomainField)
                    domainName={null}
          />
</HorizontalFormGroup>,
        <HorizontalFormGroup
          label="Timeline"
>
          <Connect(TimelineField)
                    timelineName={null}
                    windowId={undefined}
          />
</HorizontalFormGroup>,
        <HorizontalFormGroup
          label="Provider"
>
          <Connect(ProviderField) />
</HorizontalFormGroup>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Field
            className="form-control input-sm"
            component={[Function]}
            name="formula"
            rows="4"
/>,
          "label": "Formula",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "form-control input-sm",
            "component": [Function],
            "name": "formula",
            "rows": "4",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Connect(DomainField)
            domainName={null}
/>,
          "label": "Domain",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "domainName": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Connect(TimelineField)
            timelineName={null}
            windowId={undefined}
/>,
          "label": "Timeline",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "timelineName": null,
            "windowId": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Connect(ProviderField) />,
          "label": "Provider",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <HorizontalFormGroup
            label="Formula"
>
            <Field
                        className="form-control input-sm"
                        component={[Function]}
                        name="formula"
                        rows="4"
            />
</HorizontalFormGroup>,
          <HorizontalFormGroup
            label="Domain"
>
            <Connect(DomainField)
                        domainName={null}
            />
</HorizontalFormGroup>,
          <HorizontalFormGroup
            label="Timeline"
>
            <Connect(TimelineField)
                        timelineName={null}
                        windowId={undefined}
            />
</HorizontalFormGroup>,
          <HorizontalFormGroup
            label="Provider"
>
            <Connect(ProviderField) />
</HorizontalFormGroup>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Field
              className="form-control input-sm"
              component={[Function]}
              name="formula"
              rows="4"
/>,
            "label": "Formula",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "form-control input-sm",
              "component": [Function],
              "name": "formula",
              "rows": "4",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Connect(DomainField)
              domainName={null}
/>,
            "label": "Domain",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "domainName": null,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Connect(TimelineField)
              timelineName={null}
              windowId={undefined}
/>,
            "label": "Timeline",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "timelineName": null,
              "windowId": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Connect(ProviderField) />,
            "label": "Provider",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
