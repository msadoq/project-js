// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MimicEditorContainer :: render snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(Symbol.observable): [Function],
          }
    }
>
    <ReduxForm
        configuration={Object {}}
        currentDisplay={0}
        openModal={[Function]}
        pageId="page-id"
        panels={Object {}}
        search="search"
        tab={0}
        title=""
        titleStyle={Object {}}
        updateViewPanels={[Function]}
        updateViewTab={[Function]}
        viewId="view-id"
    />
</Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "configuration": Object {},
      "currentDisplay": 0,
      "openModal": [Function],
      "pageId": "page-id",
      "panels": Object {},
      "search": "search",
      "tab": 0,
      "title": "",
      "titleStyle": Object {},
      "updateViewPanels": [Function],
      "updateViewTab": [Function],
      "viewId": "view-id",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "configuration": Object {},
        "currentDisplay": 0,
        "openModal": [Function],
        "pageId": "page-id",
        "panels": Object {},
        "search": "search",
        "tab": 0,
        "title": "",
        "titleStyle": Object {},
        "updateViewPanels": [Function],
        "updateViewTab": [Function],
        "viewId": "view-id",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
